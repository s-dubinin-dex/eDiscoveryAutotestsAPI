plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
    id "io.freefair.lombok" version "8.6"
}

repositories {
    mavenCentral()
}

def allureVersion = '2.20.0',
    selenideVersion = '6.10.1',
    junitVersion = '5.9.0',
    javaFakerVersion = "1.0.2",
    gsonVersion = '2.7'

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.9.1",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            'io.rest-assured:rest-assured:5.3.0',
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            'com.fasterxml.jackson.core:jackson-databind:2.14.0',
            "org.aeonbits.owner:owner:1.0.12",
            "org.assertj:assertj-core:3.23.1",
            "com.google.code.gson:gson:$gsonVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly(
            'org.slf4j:slf4j-simple:2.0.5',
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}